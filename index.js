#!/usr/bin/env node
var x=Object.create;var a=Object.defineProperty;var S=Object.getOwnPropertyDescriptor;var k=Object.getOwnPropertyNames;var b=Object.getPrototypeOf,j=Object.prototype.hasOwnProperty;var $=e=>a(e,"__esModule",{value:!0});var P=(e,t,n)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of k(t))!j.call(e,r)&&r!=="default"&&a(e,r,{get:()=>t[r],enumerable:!(n=S(t,r))||n.enumerable});return e},m=e=>P($(a(e!=null?x(b(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var o=m(require("fs")),i=m(require("path")),c=m(require("prompts"));function s(e,t){return n=>`[${e}m${n}[${t}m`}var G=s(32,39),N=s(33,39),T=s(34,39),f=s(92,39),p=s(93,39),g=s(94,39);var u=process.cwd(),_=process.argv.slice(2),Y=_[0],l=process.env.npm_config_user_agent,v=l&&l.startsWith("yarn"),y=l&&l.startsWith("pnpm");async function B(){let e=Y??(await(0,c.default)({type:"text",name:"name",message:"Project name",initial:"rapide-project"})).name,t=i.default.resolve(u,e);if(o.default.existsSync(t)||o.default.mkdirSync(t,{recursive:!0}),o.default.readdirSync(t).length>0){let{confirm:w}=await(0,c.default)({type:"confirm",name:"confirm",message:`The target directory ${t} is not empty. Remove existing files and continue?`});if(!w)return;o.default.rmSync(t,{recursive:!0,force:!0})}o.default.mkdirSync(t,{recursive:!0});let{framework:n}=await(0,c.default)({type:"select",name:"framework",message:"Pick a framework",choices:[{title:p("vanilla"),value:"vanilla"},{title:g("react"),value:"react"},{title:f("vue"),value:"vue"}]}),{language:r}=await(0,c.default)({type:"select",name:"language",message:"Pick a language",choices:[{title:p("JavaScript"),value:"js"},{title:g("TypeScript"),value:"ts"}]}),h=r==="js"?n:`${n}-ts`;d(i.default.resolve(__dirname,"templates",h),t);let D=y?"pnpm":v?"yarn":"npm";console.log(`
Done. Now run:
`),t!==u&&console.log(`  cd ${i.default.relative(u,t)}`),y?(console.log("pnpm i"),console.log("pnpm dev")):v?(console.log("yarn"),console.log("yarn dev")):(console.log("npm install"),console.log("npm run dev")),console.log()}B().catch(e=>{console.error(e)});function d(e,t){if(o.default.statSync(e).isFile()){o.default.copyFileSync(e,t);return}else{o.default.mkdirSync(t,{recursive:!0});for(let n of o.default.readdirSync(e))d(i.default.resolve(e,n),i.default.resolve(t,n))}}
