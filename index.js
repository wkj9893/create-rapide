#!/usr/bin/env node
var h=Object.create;var a=Object.defineProperty;var w=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var S=Object.getPrototypeOf,k=Object.prototype.hasOwnProperty;var _=e=>a(e,"__esModule",{value:!0});var b=(e,t,o)=>{if(t&&typeof t=="object"||typeof t=="function")for(let r of x(t))!k.call(e,r)&&r!=="default"&&a(e,r,{get:()=>t[r],enumerable:!(o=w(t,r))||o.enumerable});return e},m=e=>b(_(a(e!=null?h(S(e)):{},"default",e&&e.__esModule&&"default"in e?{get:()=>e.default,enumerable:!0}:{value:e,enumerable:!0})),e);var n=m(require("fs")),c=m(require("path")),i=m(require("prompts"));function s(e,t){return o=>`[${e}m${o}[${t}m`}var F=s(32,39),G=s(33,39),N=s(34,39),f=s(92,39),p=s(93,39),g=s(94,39);var u=process.cwd(),j=process.argv.slice(2),$=j[0],l=process.env.npm_config_user_agent,P=l&&l.startsWith("yarn"),Y=l&&l.startsWith("pnpm");async function B(){let e=$??(await(0,i.default)({type:"text",name:"name",message:"Project name",initial:"rapide-project"})).name,t=c.default.resolve(u,e);if(n.default.existsSync(t)||n.default.mkdirSync(t,{recursive:!0}),n.default.readdirSync(t).length>0){let{confirm:d}=await(0,i.default)({type:"confirm",name:"confirm",message:`The target directory ${t} is not empty. Remove existing files and continue?`});if(!d)return;n.default.rmSync(t,{recursive:!0,force:!0})}n.default.mkdirSync(t,{recursive:!0});let{framework:o}=await(0,i.default)({type:"select",name:"framework",message:"Pick a framework",choices:[{title:p("vanilla"),value:"vanilla"},{title:g("react"),value:"react"},{title:f("vue"),value:"vue"}]}),{language:r}=await(0,i.default)({type:"select",name:"language",message:"Pick a language",choices:[{title:p("JavaScript"),value:"js"},{title:g("TypeScript"),value:"ts"}]}),y=r==="js"?o:`${o}-ts`;v(c.default.resolve(__dirname,"templates",y),t),console.log(`
Done. Now run:
`),t!==u&&console.log(`  cd ${c.default.relative(u,t)}`),console.log(l),console.log(process.env.npm_config_user_agent),Y?(console.log("pnpm i"),console.log("pnpm dev")):P?(console.log("yarn"),console.log("yarn dev")):(console.log("npm install"),console.log("npm run dev")),console.log()}B().catch(e=>{console.error(e)});function v(e,t){if(n.default.statSync(e).isFile()){n.default.copyFileSync(e,t);return}else{n.default.mkdirSync(t,{recursive:!0});for(let o of n.default.readdirSync(e))v(c.default.resolve(e,o),c.default.resolve(t,o))}}
